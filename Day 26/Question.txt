{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "74892234-588e-4dde-90b8-87c608889993",
   "metadata": {},
   "outputs": [],
   "source": [
    "Sepal Length (cm),Sepal Width (cm),Petal Length (cm),Petal Width (cm),Species\n",
    "5.1,3.5,1.4,0.2,FlowerA\n",
    "4.9,3.0,1.4,0.2,FlowerA\n",
    "4.7,3.2,1.3,0.2,FlowerA\n",
    "4.6,3.1,1.5,0.2,FlowerA\n",
    "5.0,3.6,1.4,0.2,FlowerA\n",
    "7.0,3.2,4.7,1.4,FlowerB\n",
    "6.4,3.2,4.5,1.5,FlowerB\n",
    "6.9,3.1,4.9,1.5,FlowerB\n",
    "5.5,2.3,4.0,1.3,FlowerB\n",
    "6.5,2.8,4.6,1.5,FlowerB\n",
    "6.3,3.3,6.0,2.5,FlowerC\n",
    "5.8,2.7,5.1,1.9,FlowerC\n",
    "7.1,3.0,5.9,2.1,FlowerC\n",
    "6.3,2.9,5.6,1.8,FlowerC\n",
    "6.5,3.0,5.8,2.2,FlowerC\n",
    " \n",
    " \n",
    "Questions for above dataset\n",
    " \n",
    "1.Load the dataset from a CSV file named sample_dataset.csv into a Pandas DataFrame. Display the first few rows of the dataset.\n",
    "2.Generate summary statistics for this dataset. What are the mean and standard deviation of the Sepal Length?\n",
    "3.Check for any missing values in the dataset. How would you handle them if there were any?\n",
    "4.Convert the species labels to numerical values using a mapping dictionary. For example, map 'FlowerA' to 0, 'FlowerB' to 1, and 'FlowerC' to 2.\n",
    "5.Split the dataset into training and testing sets with 70% training data and 30% testing data. Ensure that the split is stratified based on the species.\n",
    "6.Train a decision tree classifier on the training data. What parameters would you use for the decision tree?\n",
    "7.Visualize the trained decision tree.\n",
    "8.Predict the species for the testing data and compute the accuracy.\n",
    "9.Generate a classification report and a confusion matrix for the predictions."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
